###################################
# Задача 1
# У вас є список my_list із значеннями типу int.
# Роздрукувати значення, які більше 100.
# Завдання виконати за допомогою циклу for.
###################################

my_list = [50, 120, 80, 200, 45, 150]

for number in my_list:
    if number > 100:
        print(number)

###################################
# Задача 2
# У вас є список my_list зі значеннями типу int і порожній список my_results.
# Додати my_results ті значення, які більше 100.
# Роздрукувати список my_results.
# Завдання виконати за допомогою циклу for.
###################################

my_list = [50, 120, 80, 200, 45, 150]
my_results = []

for number in my_list:
    if number > 100:
        my_results.append(number)

print(my_results)

###################################
# Задача 3
# У вас є список my_list із значеннями типу str.
# Створити новий список до якого помістити
# елементи з my_list за таким правилом:
# Якщо строка стоїть на непарному місці my_list, то її замінити на обернену строку (Наприклад "qwe" на "ewq")
# Якщо на парному – залишити без зміни.
# Завдання зробити за допомогою циклу for та функції enumerate.
###################################

my_list = ["abc", "def", "ghi", "jkl", "mno"]
new_list = []

for idx, value in enumerate(my_list):
    if idx % 2 == 0:  # парні місця
        new_list.append(value)
    else:  # непарні місця
        new_list.append(value[::-1])

print(new_list)

###################################
# Задача 4
# У вас є рядок my_string = '0123456789'.
# Згенерувати цілі числа (тип int) від 0 до 99 і помістити в список.
# Завдання потрібно виконати ТІЛЬКИ через цикл у циклі (Див. Приклад вище) і зведення типів !!!
# Генерування через range або інші "фішки" я не зараховуватиму )).
###################################

my_string = "0123456789"
numbers_list = []

for symb_1 in my_string:
    for symb_2 in my_string:
        numbers_list.append(int(symb_1 + symb_2))

print(numbers_list)
